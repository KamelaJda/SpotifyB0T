plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'me.kamelajda'
version '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = 'https://m2.dv8tion.net/releases' }
    maven { url = 'https://plugins.gradle.org/m2/' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.hibernate:hibernate-entitymanager:5.6.15.Final'
    implementation 'org.hibernate:hibernate-core:6.1.7.Final'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation 'net.dv8tion:JDA:5.0.0-alpha.22'
    implementation 'org.projectlombok:lombok:1.18.26'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'club.minnced:discord-webhooks:0.8.2'
    implementation 'joda-time:joda-time:2.12.2'

    //noinspection GradlePackageUpdFate
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:7.2.2'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok:1.18.26'
}

build.dependsOn jar

compileJava {
    options.compilerArgs << '-parameters'
}

artifacts {
    archives shadowJar
}

shadowJar {
    manifest {
        attributes 'Implementation-Title': 'SpotifyB0T', 'Implementation-Version': '1.0.0'
        attributes 'Main-Class': 'me.kamelajda.MainApplication'
    }
    mergeServiceFiles()
    mergeGroovyExtensionModules()

    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    append 'META-INF/spring.factories'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava.options.encoding = 'UTF-8'